/*!
 * insicht - version 0.9.0
 *
 * Made with ❤ by Steve Ottoz so@dev.so
 *
 * Copyright (c) 2020 Steve Ottoz
 */
"use strict";const t={container:document.documentElement,selector:".insicht",visibleClass:"sichtbar",stagger:100,threshold:0,autoRefresh:!1,autoReset:!1,autoRemove:!1,init:()=>{},done:()=>{}};module.exports=class{constructor(s={}){this.options={...t,...s},this.init()}init(){return this.intersection=new IntersectionObserver(this.onIntersection.bind(this),{threshold:this.options.threshold}),this.mutation=new MutationObserver(this.onMutation.bind(this)),this.refreshTimeout=null,this._items=[],this.connect(),this.refresh(),this}refresh(){return clearTimeout(this.refreshTimeout),this.refreshTimeout=setTimeout((()=>{this.items=[].slice.call(this.options.container.querySelectorAll(this.options.selector),0)}),100),this}order(t,s){return this._items.indexOf(t.target)-this._items.indexOf(s.target)}connect(){return this.disconnect(),this._items.forEach((t=>{this.options.init instanceof Function&&this.options.init.apply(this,[t,this]),this.intersection.observe(t)})),this.options.autoRefresh&&this.mutation.observe(this.options.container,{subtree:!0,attributes:!0,childList:!0}),this}disconnect(){return this.intersection.disconnect(),this.mutation.disconnect(),this}onIntersection(t){let s=0;(t=[].slice.call(t,0)).sort(this.order.bind(this));for(let e in t){const i=t[e].target,o=t[e].isIntersecting;o&&!i.classList.contains(this.options.visibleClass)?(s=0===e?0:s+(+i.dataset.stagger||this.options.stagger),i.style.transitionDelay=s+"ms",i.classList.add(this.options.visibleClass),this.options.done instanceof Function&&this.options.done.apply(this,[i,this]),this.options.autoRemove&&this.remove(i)):!o&&this.options.autoReset&&i.classList.contains(this.options.visibleClass)&&(i.style.transitionDelay="",i.classList.remove(this.options.visibleClass))}}onMutation(t){(t=[].slice.call(t,0)).forEach((t=>{let s=!1;[].slice.call(t.addedNodes,0).forEach((t=>{t.nodeType===Node.ELEMENT_NODE&&(this.matches(t,this.options.selector)||t.querySelectorAll(this.options.selector).length)&&(s=!0)})),s&&this.refresh()}))}matches(t,s){return(t.matches||t.matchesSelector||t.msMatchesSelector||t.mozMatchesSelector||t.webkitMatchesSelector||t.oMatchesSelector).call(t,s)}get items(){return this._items}set items(t){Array.isArray(t)&&(this._items=t,this.connect())}remove(t){if(!this.options.autoRefresh&&t&&t.nodeType===Node.ELEMENT_NODE){let s=this._items.indexOf(t);s>-1&&this._items.splice(s,1),this.intersection.unobserve(t)}return this}reset(){return this._items.forEach((t=>{t.classList.remove(this.options.visibleClass)})),this}destroy(){return this.disconnect(),this}};
